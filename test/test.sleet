#! drizzle
view
    section(class='main' + todo.length)@if(todos.length)
        input.toggle-all(type='checkbox' id='toggle-all' checked=true)(
            action:change=toggleAll(completed=this.checked)
        )
        label(for='toggle-all')
        ul.todo-list
            li(class=if(todo.completed 'completed') + if(todo == editing 'editing'))@each(filtered as todo)
                .view
                    input.toggle(type='checkbox' checked=todo.completed)(
                        action:change = toggle(id=todo.id checked=this.checked)
                    )
                    label(on:dblclick=edit(todo)) $todo.name
                    button.destroy(action:click=remove(id=todo.id))
                input.edit(value=todo.name)(
                    action:blur = commitEdit(todo this.value)
                    action:enter = commitEdit(todo this.value)
                    on:escape = revertEdit(this todo)
                )

script..
export default {
    computed: {
        allDone ({todos}) {
            return !todos.some(it => !it.completed)
        },
        filtered ({todos, filter}) {
            if (filter === 'completed') return todos.filter(it => it.completed)
            if (filter === 'active') return todos.filter(it => !it.completed)
            return todos
        }
    },

    customEvents: {
        escape (node, cb) {
            const ee = function (e) {
                if (e.keyCode !== 27) return
                e.preventDefault()
                cb.call(this, e)
            }
            node.addEventListener('keydown', ee, false)
            return {
                dispose () {
                    node.removeEventListener('keydown', ee, false)
                }
            }
        }
    },

    events: {
        edit (todo) {
            this.set({editing: todo})
        },
        revertEdit (el, todo) {
            el.value = todo.name
            this.set({editing: false})
        }
    },

    actions: {
        commitEdit (cb, todo, name) {
            this.set({editing: false})
            if (todo.name === name) return
            cb({id: todo.id, name})
        }
    }
}
